name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시되면 트리거
  pull_request:
    branches:
      - main  # main 브랜치로 PR이 생성되면 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 리포지토리의 코드를 가져옵니다.

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  # Docker Buildx를 설정합니다.

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hospital-web:${{ github.sha }} .
    
    - name: Login to Amazon ECR
      run: |
        aws --region ${{ secrets.AWS_REGION }} ecr get-login-password --profile github-actions | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    
    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hospital-web:${{ github.sha }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml  # EKS에 배포하는 단계
        kubectl apply -f k8s/service.yaml  # 서비스 설정
